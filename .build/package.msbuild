<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Deploy" ToolsVersion="4.0">
	<PropertyGroup>
		<DeploymentFolder>deployment</DeploymentFolder>
		<NuGetExecutablePath>..\.nuget\nuget.exe</NuGetExecutablePath>
		<PackageAssembly>Shuttle.Scheduling</PackageAssembly>
		<PackageName>shuttle-scheduling</PackageName>
	</PropertyGroup>

	<Import Project="Shuttle.Core.MSBuild.targets" />

	<ItemGroup>
		<Framework Include="net40-full;net45-full;net451-full" />
		<ProjectReference Include="..\$(PackageAssembly)\$(PackageAssembly).csproj" />
		<ProjectReference Include="..\$(PackageAssembly).Server\$(PackageAssembly).Server.csproj" />
		<DatabaseScript Include="*.sql" />
	</ItemGroup>

	<Target Name="Build">
		<MSBuild
            Projects="$(MSBuildProjectFile)"
            Targets="BuildConfiguration"
			Properties="Configuration=Debug;Framework=%(Framework.Identity);OutputPath=$(MSBuildProjectDirectory)\deployment\debug\%(Framework.Identity)"
        />

		<MSBuild
            Projects="$(MSBuildProjectFile)"
            Targets="BuildConfiguration"
			Properties="Configuration=Release;Framework=%(Framework.Identity);OutputPath=$(MSBuildProjectDirectory)\deployment\release\%(Framework.Identity)"
        />
	</Target>

	<Target Name="BuildConfiguration">
		<MSBuild Projects="@(ProjectReference)" Targets="Rebuild"/>

		<ItemGroup>
			<RemoveFiles Include="$(OutputPath)\*.xml;$(OutputPath)\*.config" />
		</ItemGroup>

		<Delete Files="@(RemoveFiles)" />
		<Copy SourceFiles="@(DatabaseScript)" DestinationFolder="$(OutputPath)\database\" SkipUnchangedFiles="false" />
		<Copy SourceFiles="app.config" DestinationFiles="$(OutputPath)\Shuttle.Scheduling.Server.exe.config" SkipUnchangedFiles="false" />

		<ItemGroup>
			<ZipFiles Include="$(OutputPath)\**\*.*" />
		</ItemGroup>

		<Zip
			Files="@(ZipFiles)"
			RelativeFolder="$(OutputPath)"
			ZipFilePath="$(MSBuildProjectDirectory)\deployment\$(Configuration)\shuttle-scheduling-%(Framework.Identity).zip" />
	</Target>

	<Target Name="Deploy">
		<Prompt Text="Enter semantic version:" Condition="$(SemanticVersion) == ''">
			<Output TaskParameter="UserInput" PropertyName="SemanticVersion" />
		</Prompt>

		<Error Text="Please enter a version number." Condition="$(SemanticVersion) == ''" />

		<ItemGroup>
			<AssemblyInfoFiles Include="..\**\*AssemblyInfo.cs" Exclude="..\*.Tests\**\*AssemblyInfo.cs"/>
		</ItemGroup>

		<RegexFindAndReplace Files="@(AssemblyInfoFiles)" FindExpression="AssemblyInformationalVersion\s*\(\s*&quot;.*&quot;\s*\)" ReplacementText="AssemblyInformationalVersion(&quot;$(SemanticVersion)&quot;)" />
		<RegexFindAndReplace Files="@(AssemblyInfoFiles)" FindExpression="AssemblyVersion\s*\(\s*&quot;.*&quot;\s*\)" ReplacementText="AssemblyVersion(&quot;$(SemanticVersion).0&quot;)" />

		<MSBuild
            Projects="$(MSBuildProjectFile)"
            Targets="Build"
        />

		<ItemGroup>
			<NugetBinaries Include="$(DeploymentFolder)\release\**\$(PackageAssembly).dll" />
		</ItemGroup>

		<Copy SourceFiles="package.nuspec" DestinationFolder="$(DeploymentFolder)\nuget\" SkipUnchangedFiles="false" />
		<Copy SourceFiles="@(NugetBinaries)" DestinationFolder="$(DeploymentFolder)\nuget\lib\%(RecursiveDir)" SkipUnchangedFiles="false" />

		<RegexFindAndReplace Files="$(DeploymentFolder)\nuget\package.nuspec" FindExpression="\{semver\}" ReplacementText="$(SemanticVersion)" />
		<RegexFindAndReplace Files="$(DeploymentFolder)\nuget\package.nuspec" FindExpression="\{year\}" ReplacementText="$([System.DateTime]::Now.ToString(`yyyy`))" />
		<SetNugetPackageVersions Files="$(DeploymentFolder)\nuget\package.nuspec" PackageFolder="..\packages" />

		<Exec Command="$(NuGetExecutablePath) pack $(DeploymentFolder)\nuget\package.nuspec -OutputDirectory $(DeploymentFolder)\nuget -NoPackageAnalysis" />
		<Exec Command="$(NuGetExecutablePath) push $(DeploymentFolder)\nuget\$(PackageName).$(SemanticVersion).nupkg" Condition="$(Operation) != 'pack-only'" />
	</Target>
</Project>
